RETURNING EXPORTS:

The require function returns the "exports" of the required module. These exports are stored in the "module.exports" objects.

In each module we can export variables, which will, in the end be returned by the require function. And we do that by assigning variables to "module.exports" or simply to "exports" where it is just a pointer to "module.exports".

If all you want to export one single variable, like one class or one function, you usually use module.exports and set it equal to the variable that you want to export. 

module.exports = Calculator;

On the other hand, if you're looking to export multiple named variables like multiple functions, then you should create these as properties of the export object.

exports.add = (a,b) => a + b;


This is how we export and import data from one module into the other. Of course, this is also why we usually assign the result of a require function called, to a new variable. So that we can save the returned exports.


CACHING MODULES:
What this means is that if you require the same module multiple times, you will always get the same result. 

And the code in the modules is actually only executed in the first call. In subsequent calls, the result is simply retrieved from cache.
